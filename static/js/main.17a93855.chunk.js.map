{"version":3,"sources":["components/CodeBlock.js","components/CssCodeDisplay.js","components/HtmlCodeDisplay.js","components/themes.js","components/BlockOptions.js","components/Key.js","components/HighlightGlobalStyles.js","components/ViewSwitcher.js","App.js","serviceWorker.js","index.js"],"names":["CodeBlock","handleRef","node","_this","this","highlightCode","hljs","highlightBlock","_this$props","props","children","Object","objectWithoutProperties","react_default","a","createElement","assign","className","ref","React","Component","MainDiv","styled","div","_templateObject","CopyArea","textarea","_templateObject2","CopyButton","button","_templateObject3","CssCodeDisplay","state","copyButtonText","Copy","textArea","select","document","execCommand","setState","setTimeout","cssCode","options","_this2","Fragment","onClick","components_CodeBlock","style","maxHeight","value","onChange","HtmlCodeDisplay_templateObject","HtmlCodeDisplay_templateObject2","HtmlCodeDisplay_templateObject3","HtmlCodeDisplay","htmlCode","highlightAuto","code","HtmlCodeDisplay_CopyButton","HtmlCodeDisplay_MainDiv","HtmlCodeDisplay_CopyArea","themes","custom","name","addition","attr","attribute","background","built_in","builtin-name","bullet","class","comment","deletion","doctag","emphasis","formula","function","keyword","link","literal","meta","meta-keyword","meta-string","number","params","quote","regexp","section","selector-attr","selector-class","selector-id","selector-pseudo","selector-tag","string","strong","subst","symbol","tag","template-tag","template-variable","text-color","title","type","variable","default","themesArray","returnArray","theme","key","push","getThemes","FlexDiv","BlockOptions_templateObject","InputDiv","BlockOptions_templateObject2","ColorPicker","BlockOptions_templateObject3","CodeInput","_templateObject4","CodeInputDiv","_templateObject5","CodeDiv","_templateObject6","ColorsDiv","_templateObject7","BlockOptions","allOptions","themeChange","themeName","map","option","react_color_lib","color","id","event","optionChange","codeChange","KeyTable","table","Key_templateObject","Key","colSpan","HighlightGlobalStyles","createGlobalStyle","HighlightGlobalStyles_templateObject","Views","ViewSwitcher_templateObject","Link","p","ViewSwitcher_templateObject2","active","ViewSwitcher","_ref","view","changeView","components_HighlightGlobalStyles","ParentDiv","App_templateObject","App","objectSpread","console","log","_color$rgb","rgb","r","g","b","concat","prevstate","defineProperty","target","_this$state","components_ViewSwitcher","components_CssCodeDisplay","components_HtmlCodeDisplay","components_BlockOptions","debounce","components_Key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17a93855.chunk.js","sourcesContent":["import React from \"react\";\nimport hljs from \"highlight.js\";\n\nclass CodeBlock extends React.Component {\n  componentDidMount() {\n    this.highlightCode();\n  }\n\n  componentDidUpdate() {\n    this.highlightCode();\n  }\n\n  handleRef = node => {\n    this.node = node;\n  };\n\n  highlightCode() {\n    if (this.node) {\n      hljs.highlightBlock(this.node);\n    }\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n\n    return (\n      <code className=\"hljs-code-block\" {...props} ref={this.handleRef}>\n        {children}\n      </code>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport CodeBlock from \"./CodeBlock\";\n\nconst MainDiv = styled.div`\n  position: relative;\n`;\nconst CopyArea = styled.textarea`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  z-index: -1;\n`;\nconst CopyButton = styled.button`\n  background: none;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 15px;\n  margin-bottom: 4px;\n  :focus {\n    outline: none;\n  }\n`;\n\nclass CssCodeDisplay extends React.Component {\n  state = {\n    copyButtonText: \"COPY\"\n  };\n\n  Copy = () => {\n    this.textArea.select();\n    document.execCommand(\"copy\");\n    this.setState({\n      copyButtonText: \"COPIED\"\n    });\n    setTimeout(() => {\n      this.setState({\n        copyButtonText: \"COPY\"\n      });\n    }, 5000);\n  };\n\n  cssCode = `\n    .hljs-code-block{\n        border-radius: ${[\"border-radius\"]};\n        display: block;\n        overflow-x: auto;\n        padding: 2rem 1rem;\n        background: ${this.props.options[\"background\"]};\n        color: ${this.props.options[\"text-color\"]};\n        margin: 0;\n        white-space: pre;\n        text-align: left;\n    }\n    \n    .hljs-comment,\n    .hljs-quote,\n    .hljs-emphasis {\n        font-style: italic\n    }\n    .hljs-keyword,\n    .hljs-selector-tag,\n    .hljs-subst,\n    .hljs-title,\n    .hljs-section,\n    .hljs-selector-id,\n    .hljs-type,\n    .hljs-class .hljs-title\n    .hljs-meta,\n    .hljs-strong  {\n        font-weight: bold\n    }\n    \n    .hljs-addition{\n        color: ${this.props.options[\"addition\"]};\n    }\n    .hljs-attr{\n        color: ${this.props.options[\"attr\"]};\n    }\n    .hljs-attribute{\n        color: ${this.props.options[\"attr\"]};\n    }\n    .hljs-built_in{\n        color: ${this.props.options[\"built_in\"]};\n    }\n    .hljs-built_in{\n        color: ${this.props.options[\"built_in\"]};\n    }\n    .hljs-builtin-name{\n        color: ${this.props.options[\"builtin-name\"]};\n    }\n    .hljs-bullet{\n        color: ${this.props.options[\"bullet\"]};\n    }\n    .hljs-class{\n        color: ${this.props.options[\"class\"]};\n    }\n    .hljs-deletion{\n        color: ${this.props.options[\"deletion\"]};\n    }\n    .hljs-doctag{\n        color: ${this.props.options[\"doctag\"]};\n    }\n    .hljs-emphasis{\n        color: ${this.props.options[\"emphasis\"]};\n    }\n    .hljs-formula{\n        color: ${this.props.options[\"formula\"]};\n    }\n    .hljs-function{\n        color: ${this.props.options[\"function\"]};\n    }\n    .hljs-keyword{\n        color: ${this.props.options[\"keyword\"]};\n    }\n    .hljs-link{\n        color: ${this.props.options[\"link\"]};\n    }\n    .hljs-literal{\n        color: ${this.props.options[\"literal\"]};\n    }\n    .hljs-meta{\n        color: ${this.props.options[\"meta\"]};\n    }\n    .hljs-meta-keyword{\n        color: ${this.props.options[\"meta-keyword\"]};\n    }\n    .hljs-meta-string{\n        color: ${this.props.options[\"meta-string\"]};\n    }\n    .hljs-name{\n        color: ${this.props.options[\"name\"]};\n    }\n    .hljs-number{\n        color: ${this.props.options[\"number\"]};\n    }\n    .hljs-params{\n        color: ${this.props.options[\"params\"]};\n    }\n    .hljs-quote{\n        color: ${this.props.options[\"quote\"]};\n    }\n    .hljs-regexp{\n        color: ${this.props.options[\"regexp\"]};\n    }\n    .hljs-section{\n        color: ${this.props.options[\"section\"]};\n    }\n    .hljs-selector-attr{\n        color: ${this.props.options[\"selector-attr\"]};\n    }\n    .hljs-selector-class{\n        color: ${this.props.options[\"selector-class\"]};\n    }\n    .hljs-selector-id{\n        color: ${this.props.options[\"selector-id\"]};\n    }\n    .hljs-selector-pseudo{\n        color: ${this.props.options[\"selector-pseudo\"]};\n    }\n    .hljs-selector-tag{\n        color: ${this.props.options[\"selector-tag\"]};\n    }\n    .hljs-string{\n        color: ${this.props.options[\"string\"]};\n    }\n    .hljs-strong{\n        color: ${this.props.options[\"strong\"]};\n    }\n    .hljs-subst{\n        color: ${this.props.options[\"subst\"]};\n    }\n    .hljs-symbol{\n        color: ${this.props.options[\"symbol\"]};\n    }\n    .hljs-tag{\n        color: ${this.props.options[\"tag\"]};\n    }\n    .hljs-template-tag{\n        color: ${this.props.options[\"template-tag\"]};\n    }\n    .hljs-template-variable{\n        color: ${this.props.options[\"template-variable\"]};\n    }\n    .hljs-title{\n        color: ${this.props.options[\"title\"]};\n    }\n    .hljs-type{\n        color: ${this.props.options[\"type\"]};\n    }\n    .hljs-variable{\n        color: ${this.props.options[\"variable\"]};\n    }\n    `;\n  render() {\n    return (\n      <React.Fragment>\n        <h2>CSS CODE</h2>\n        <CopyButton onClick={this.Copy}>{this.state.copyButtonText}</CopyButton>\n        <MainDiv>\n          <CodeBlock style={{ maxHeight: \"500px\" }}>{this.cssCode}</CodeBlock>\n          <CopyArea\n            ref={textarea => (this.textArea = textarea)}\n            value={this.cssCode}\n            onChange={() => {}}\n          />\n        </MainDiv>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CssCodeDisplay;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport hljs from \"highlight.js\";\nimport CodeBlock from \"./CodeBlock\";\n\nconst MainDiv = styled.div`\n  position: relative;\n`;\nconst CopyArea = styled.textarea`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  z-index: -1;\n`;\nconst CopyButton = styled.button`\n  background: none;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-size: 15px;\n  margin-bottom: 4px;\n  :focus {\n    outline: none;\n  }\n`;\n\nclass HtmlCodeDisplay extends React.Component {\n  state = {\n    copyButtonText: \"COPY\"\n  };\n\n  Copy = () => {\n    this.textArea.select();\n    document.execCommand(\"copy\");\n    this.setState({\n      copyButtonText: \"COPIED\"\n    });\n    setTimeout(() => {\n      this.setState({\n        copyButtonText: \"COPY\"\n      });\n    }, 5000);\n  };\n\n  htmlCode = `\n  <code class=\"hljs-code-block\">${hljs.highlightAuto(this.props.code).value}\n  </code>\n        `;\n  render() {\n    return (\n      <React.Fragment>\n        <h2>HTML CODE</h2>\n        <CopyButton onClick={this.Copy}>{this.state.copyButtonText}</CopyButton>\n        <MainDiv>\n          <CodeBlock style={{ maxHeight: \"500px\" }}>{this.htmlCode}</CodeBlock>\n          <CopyArea\n            ref={textarea => (this.textArea = textarea)}\n            value={this.htmlCode}\n            onChange={() => {}}\n          />\n        </MainDiv>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HtmlCodeDisplay;\n","const themes = {\n  custom: {\n    name: \"default\",\n    options: {\n      addition: \"\",\n      attr: \"\",\n      attribute: \"\",\n      background: \"\",\n      built_in: \"\",\n      \"builtin-name\": \"\",\n      bullet: \"r\",\n      class: \"\",\n      code: \"\",\n      comment: \"\",\n      deletion: \"\",\n      doctag: \"\",\n      emphasis: \"\",\n      formula: \"\",\n      function: \"\",\n      keyword: \"\",\n      link: \"\",\n      literal: \"\",\n      meta: \"\",\n      \"meta-keyword\": \"\",\n      \"meta-string\": \"\",\n      name: \"\",\n      number: \"\",\n      params: \"\",\n      quote: \"\",\n      regexp: \"\",\n      section: \"\",\n      \"selector-attr\": \"\",\n      \"selector-class\": \"\",\n      \"selector-id\": \"\",\n      \"selector-pseudo\": \"\",\n      \"selector-tag\": \"\",\n      string: \"\",\n      strong: \"\",\n      subst: \"\",\n      symbol: \"\",\n      tag: \"\",\n      \"template-tag\": \"\",\n      \"template-variable\": \"\",\n      \"text-color\": \"\",\n      title: \"\",\n      type: \"\",\n      variable: \"\"\n    }\n  },\n  default: {\n    name: \"default\",\n    options: {\n      addition: \"rgba(255,184,28,1)\",\n      attr: \"rgba(255,184,28,1)\",\n      attribute: \"rgba(255,184,28,1)\",\n      background: \"rgba(58,61,64,1)\",\n      built_in: \"rgba(255,184,28,1)\",\n      \"builtin-name\": \"rgba(255,184,28,1)\",\n      bullet: \"rgba(125,227,244,1)\",\n      class: \"rgba(255,184,28,1)\",\n      code: \"rgba(190,210,30,1)\",\n      comment: \"rgba(189,192,192,1)\",\n      deletion: \"rgba(189,192,192,1)\",\n      doctag: \"rgba(189,192,192,1)\",\n      emphasis: \"rgba(169,173,173,1)\",\n      formula: \"rgba(169,173,173,1)\",\n      function: \"rgba(255,184,28,1)\",\n      keyword: \"rgba(255,184,28,1)\",\n      link: \"rgba(125,227,244,1)\",\n      literal: \"rgba(125,227,244,1)\",\n      meta: \"rgba(189,192,192,1)\",\n      \"meta-keyword\": \"rgba(189,192,192,1)\",\n      \"meta-string\": \"rgba(189,192,192,1)\",\n      name: \"rgba(255,184,28,1)\",\n      number: \"rgba(125,227,244,1)\",\n      params: \"rgba(135,138,140,1)\",\n      quote: \"rgba(125,227,244,1)\",\n      regexp: \"rgba(125,227,244,1)\",\n      section: \"rgba(255,184,28,1)\",\n      \"selector-attr\": \"rgba(255,184,28,1)\",\n      \"selector-class\": \"rgba(190,210,30,1)\",\n      \"selector-id\": \"rgba(255,184,28,1)\",\n      \"selector-pseudo\": \"rgba(255,184,28,1)\",\n      \"selector-tag\": \"rgba(255,184,28,1)\",\n      string: \"rgba(125,227,244,1)\",\n      strong: \"rgba(169,173,173,1)\",\n      subst: \"rgba(255,184,28,1)\",\n      symbol: \"rgba(255,184,28,1)\",\n      tag: \"rgba(255,184,28,1)\",\n      \"template-tag\": \"rgba(255,184,28,1)\",\n      \"template-variable\": \"rgba(255,184,28,1)\",\n      \"text-color\": \"rgba(208,211,211,1)\",\n      title: \"rgba(255,184,28,1)\",\n      type: \"rgba(255,184,28,1)\",\n      variable: \"rgba(255,184,28,1)\"\n    }\n  }\n};\n\nconst getThemes = () => {\n  let returnArray = [];\n  for (let theme in themes) {\n    const key = theme;\n    returnArray.push(key);\n  }\n  return returnArray;\n};\n\nexport default themes;\nexport const themesArray = getThemes();\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChromePicker } from \"react-color\";\nimport CodeBlock from \"./CodeBlock\";\nimport { themesArray } from \"./themes\";\n\nconst FlexDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n  @media (max-width: 600px) {\n    flex-direction: column-reverse;\n  }\n`;\nconst InputDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 95%;\n  margin: auto;\n`;\nconst ColorPicker = styled.div`\n  margin: 10px;\n`;\nconst CodeInput = styled.textarea`\n  height: 500px;\n  padding: 2rem 1rem;\n  :focus {\n    outline: none;\n  }\n`;\nconst CodeInputDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 25px;\n\n  & > * {\n    width: 50%;\n    overflow: scroll;\n  }\n  @media (max-width: 1030px) {\n    flex-direction: column;\n    & > * {\n      width: 100%;\n      overflow: scroll;\n    }\n  }\n`;\nconst CodeDiv = styled.div`\n  height: 800px;\n  position: sticky;\n  top: 5px;\n  width: 60%;\n  @media (max-width: 600px) {\n    width: 95%;\n    margin: auto;\n    position: static;\n    & * {\n      padding: 0;\n    }\n  }\n`;\nconst ColorsDiv = styled.div`\n  width: 40%;\n  @media (max-width: 600px) {\n    width: 95%;\n    height: auto;\n    margin: auto;\n    margin-top: 50px;\n  }\n`;\nconst BlockOptions = props => {\n  let allOptions = [];\n  for (let options in props.options) {\n    const key = options;\n    const value = props.options[key];\n    allOptions.push({\n      name: key,\n      value: value\n    });\n  }\n\n  return (\n    <FlexDiv>\n      <ColorsDiv>\n        <h2>Themes</h2>\n        <select onChange={props.themeChange} value={props.themeName}>\n          {themesArray.map(theme => (\n            <option key={theme} value={theme}>\n              {theme}\n            </option>\n          ))}\n        </select>\n        <h2>Colors</h2>\n        <InputDiv>\n          {allOptions.map(option => (\n            <ColorPicker key={option.name}>\n              <p>{option.name}: </p>\n              <ChromePicker\n                color={option.value}\n                id={option.name}\n                onChange={(color, event) =>\n                  props.optionChange(color, event, option.name)\n                }\n              />\n            </ColorPicker>\n          ))}\n        </InputDiv>\n      </ColorsDiv>\n      <CodeDiv>\n        <h2>Code</h2>\n        <CodeInputDiv>\n          <CodeInput value={props.code} onChange={props.codeChange} />\n          <CodeBlock>{props.code}</CodeBlock>\n        </CodeInputDiv>\n      </CodeDiv>\n    </FlexDiv>\n  );\n};\n\nexport default BlockOptions;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst KeyTable = styled.table`\n  margin: auto;\n  text-align: left;\n  border-collapse: collapse;\n  margin-bottom: 10px;\n  & > tbody tr,\n  td {\n    border: 1px solid #adadad;\n    padding: 10px;\n  }\n`;\n\nconst Key = () => (\n  <React.Fragment>\n    <h2>KEY</h2>\n    <KeyTable>\n      <tbody>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>General-purpose</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>keyword</td>\n          <td>keyword in a regular Algol-style language</td>\n        </tr>\n        <tr>\n          <td>built_in</td>\n          <td>built-in or library object (constant, class, function)</td>\n        </tr>\n        <tr>\n          <td>type</td>\n          <td>\n            user-defined type in a language with first-class syntactically\n            significant types, like Haskell\n          </td>\n        </tr>\n        <tr>\n          <td>literal</td>\n          <td>\n            special identifier for a built-in value (“true”, “false”, “null”)\n          </td>\n        </tr>\n        <tr>\n          <td>number</td>\n          <td>number, including units and modifiers, if any.</td>\n        </tr>\n        <tr>\n          <td>regexp</td>\n          <td>literal regular expression</td>\n        </tr>\n        <tr>\n          <td>string</td>\n          <td>literal string, character</td>\n        </tr>\n        <tr>\n          <td>subst</td>\n          <td>parsed section inside a literal string</td>\n        </tr>\n        <tr>\n          <td>symbol</td>\n          <td>symbolic constant, interned string, goto label</td>\n        </tr>\n        <tr>\n          <td>class</td>\n          <td>\n            class or class-level declaration (interfaces, traits, modules, etc)\n          </td>\n        </tr>\n        <tr>\n          <td>function</td>\n          <td>function or method declaration</td>\n        </tr>\n        <tr>\n          <td>title</td>\n          <td>name of a class or a function at the place of declaration</td>\n        </tr>\n        <tr>\n          <td>params</td>\n          <td>\n            block of function arguments (parameters) at the place of declaration\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>Meta</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>comment</td>\n          <td>comment</td>\n        </tr>\n        <tr>\n          <td>doctag</td>\n          <td>documentation markup within comments</td>\n        </tr>\n        <tr>\n          <td>meta</td>\n          <td>\n            flags, modifiers, annotations, processing instructions, preprocessor\n            directive, etc\n          </td>\n        </tr>\n        <tr>\n          <td>meta-keyword</td>\n          <td>keyword or built-in within meta construct</td>\n        </tr>\n        <tr>\n          <td>meta-string</td>\n          <td>string within meta construct</td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>Tags, attributes, configs</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>section</td>\n          <td>heading of a section in a config file, heading in text markup</td>\n        </tr>\n        <tr>\n          <td>tag</td>\n          <td>XML/HTML tag</td>\n        </tr>\n        <tr>\n          <td>name</td>\n          <td>name of an XML tag, the first word in an s-expression</td>\n        </tr>\n        <tr>\n          <td>builtin-name</td>\n          <td>s-expression name from the language standard library</td>\n        </tr>\n        <tr>\n          <td>attr</td>\n          <td>\n            name of an attribute with no language defined semantics (keys in\n            JSON, setting names in .ini), also sub-attribute within another\n            highlighted object, like XML tag\n          </td>\n        </tr>\n        <tr>\n          <td>attribute</td>\n          <td>\n            name of an attribute followed by a structured value part, like CSS\n            properties\n          </td>\n        </tr>\n        <tr>\n          <td>variable</td>\n          <td>\n            variable in a config or a template file, environment var expansion\n            in a script\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>Markup</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>bullet</td>\n          <td>list item bullet in text markup</td>\n        </tr>\n        <tr>\n          <td>code</td>\n          <td>code block in text markup</td>\n        </tr>\n        <tr>\n          <td>emphasis</td>\n          <td>emphasis in text markup</td>\n        </tr>\n        <tr>\n          <td>strong</td>\n          <td>strong emphasis in text markup</td>\n        </tr>\n        <tr>\n          <td>formula</td>\n          <td>mathematical formula in text markup</td>\n        </tr>\n        <tr>\n          <td>link</td>\n          <td>hyperlink in text markup</td>\n        </tr>\n        <tr>\n          <td>quote</td>\n          <td>quotation in text markup</td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>CSS</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>selector-tag</td>\n          <td>tag selector in CSS</td>\n        </tr>\n        <tr>\n          <td>selector-id</td>\n          <td>#id selector in CSS</td>\n        </tr>\n        <tr>\n          <td>selector-class</td>\n          <td>.class selector in CSS</td>\n        </tr>\n        <tr>\n          <td>selector-attr</td>\n          <td>[attr] selector in CSS</td>\n        </tr>\n        <tr>\n          <td>selector-pseudo</td>\n          <td>:pseudo selector in CSS</td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>Templates</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>template-tag</td>\n          <td>tag of a template language</td>\n        </tr>\n        <tr>\n          <td>template-variable</td>\n          <td>variable in a template language</td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <strong>diff</strong>\n          </td>\n        </tr>\n        <tr>\n          <td>addition</td>\n          <td>added or changed line in a diff</td>\n        </tr>\n        <tr>\n          <td>deletion</td>\n          <td>deleted line in a diff</td>\n        </tr>\n      </tbody>\n    </KeyTable>\n  </React.Fragment>\n);\n\nexport default Key;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst HighlightGlobalStyles = createGlobalStyle`\n.hljs-code-block{\n    border-radius: ${props => props.options[\"border-radius\"]};\n    display: block;\n    overflow-x: auto;\n    padding: 2rem 1rem;\n    background: ${props => props.options[\"background\"]};;\n    color: ${props => props.options[\"text-color\"]};\n    margin: 0;\n    white-space: pre;\n    text-align: left;\n    @media (max-width: 600px) {\n        padding: 0;\n    }\n}\n.hljs-comment,\n.hljs-quote,\n.hljs-emphasis {\n    font-style: italic\n}\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-subst,\n.hljs-title,\n.hljs-section,\n.hljs-selector-id,\n.hljs-type,\n.hljs-class .hljs-title\n.hljs-meta,\n.hljs-strong  {\n    font-weight: bold\n}\n\n.hljs-addition{\n    color: ${props => props.options[\"addition\"]};\n}\n.hljs-attr{\n    color: ${props => props.options[\"attr\"]};\n}\n.hljs-attribute{\n    color: ${props => props.options[\"attr\"]};\n}\n.hljs-built_in{\n    color: ${props => props.options[\"built_in\"]};\n}\n.hljs-built_in{\n    color: ${props => props.options[\"built_in\"]};\n}\n.hljs-builtin-name{\n    color: ${props => props.options[\"builtin-name\"]};\n}\n.hljs-bullet{\n    color: ${props => props.options[\"bullet\"]};\n}\n.hljs-class{\n    color: ${props => props.options[\"class\"]};\n}\n.hljs-deletion{\n    color: ${props => props.options[\"deletion\"]};\n}\n.hljs-doctag{\n    color: ${props => props.options[\"doctag\"]};\n}\n.hljs-emphasis{\n    color: ${props => props.options[\"emphasis\"]};\n}\n.hljs-formula{\n    color: ${props => props.options[\"formula\"]};\n}\n.hljs-function{\n    color: ${props => props.options[\"function\"]};\n}\n.hljs-keyword{\n    color: ${props => props.options[\"keyword\"]};\n}\n.hljs-link{\n    color: ${props => props.options[\"link\"]};\n}\n.hljs-literal{\n    color: ${props => props.options[\"literal\"]};\n}\n.hljs-meta{\n    color: ${props => props.options[\"meta\"]};\n}\n.hljs-meta-keyword{\n    color: ${props => props.options[\"meta-keyword\"]};\n}\n.hljs-meta-string{\n    color: ${props => props.options[\"meta-string\"]};\n}\n.hljs-name{\n    color: ${props => props.options[\"name\"]};\n}\n.hljs-number{\n    color: ${props => props.options[\"number\"]};\n}\n.hljs-params{\n    color: ${props => props.options[\"params\"]};\n}\n.hljs-quote{\n    color: ${props => props.options[\"quote\"]};\n}\n.hljs-regexp{\n    color: ${props => props.options[\"regexp\"]};\n}\n.hljs-section{\n    color: ${props => props.options[\"section\"]};\n}\n.hljs-selector-attr{\n    color: ${props => props.options[\"selector-attr\"]};\n}\n.hljs-selector-class{\n    color: ${props => props.options[\"selector-class\"]};\n}\n.hljs-selector-id{\n    color: ${props => props.options[\"selector-id\"]};\n}\n.hljs-selector-pseudo{\n    color: ${props => props.options[\"selector-pseudo\"]};\n}\n.hljs-selector-tag{\n    color: ${props => props.options[\"selector-tag\"]};\n}\n.hljs-string{\n    color: ${props => props.options[\"string\"]};\n}\n.hljs-strong{\n    color: ${props => props.options[\"strong\"]};\n}\n.hljs-subst{\n    color: ${props => props.options[\"subst\"]};\n}\n.hljs-symbol{\n    color: ${props => props.options[\"symbol\"]};\n}\n.hljs-tag{\n    color: ${props => props.options[\"tag\"]};\n}\n.hljs-template-tag{\n    color: ${props => props.options[\"template-tag\"]};\n}\n.hljs-template-variable{\n    color: ${props => props.options[\"template-variable\"]};\n}\n.hljs-title{\n    color: ${props => props.options[\"title\"]};\n}\n.hljs-type{\n    color: ${props => props.options[\"type\"]};\n}\n.hljs-variable{\n    color: ${props => props.options[\"variable\"]};\n}\n`;\n\nexport default HighlightGlobalStyles;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport HighlightGlobalStyles from \"./HighlightGlobalStyles\";\n\nconst Views = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Link = styled.p`\ncursor: pointer;\n    padding: 5px;\n    margin: 10px;\n    border-radius: 100px;\n    font-size: 20px;\n    width: 100px;\n    background: ${props => (props.active ? \"#777\" : \"none\")};\n    :hover {\n    background: #777;\n  }: \n`;\n\nconst ViewSwitcher = ({ view, changeView, options }) => (\n  <React.Fragment>\n    <HighlightGlobalStyles options={options} />\n    <Views>\n      <Link active={view === \"output\"} onClick={() => changeView(\"output\")}>\n        OUTPUT\n      </Link>\n      <Link active={view === \"input\"} onClick={() => changeView(\"input\")}>\n        INPUT\n      </Link>\n      <Link active={view === \"key\"} onClick={() => changeView(\"key\")}>\n        KEY\n      </Link>\n    </Views>\n  </React.Fragment>\n);\n\nexport default ViewSwitcher;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport CodeBlock from \"./components/CodeBlock\";\nimport CssCodeDisplay from \"./components/CssCodeDisplay\";\nimport HtmlCodeDisplay from \"./components/HtmlCodeDisplay\";\nimport BlockOptions from \"./components/BlockOptions\";\nimport Key from \"./components/Key\";\nimport ViewSwitcher from \"./components/ViewSwitcher\";\nimport debounce from \"@tuxsudo/debounce\";\nimport themes from \"./components/themes\";\n\nconst ParentDiv = styled.div`\n  width: 50%;\n  margin: auto;\n  @media (max-width: 1100px) {\n    width: 90%;\n  }\n`;\n\nclass App extends React.Component {\n  state = {\n    view: \"output\",\n    code: `    \n    <!DOCTYPE html>\n    <title>Title</title>\n    \n    <style>body {width: 500px;}</style>\n    \n    <script type=\"application/javascript\">\n      function $init() {return true;}\n    </script>\n    \n    <body>\n      <p checked class=\"title\" id='title'>Title</p>\n      <!-- here goes the rest of the page -->\n    </body>`,\n    options: {\n      ...themes.default.options\n    },\n    themeName: \"default\"\n  };\n\n  changeView = view => {\n    this.setState({\n      view: view\n    });\n  };\n\n  optionChange = (color, event, option) => {\n    console.log(color);\n\n    const { r, g, b, a } = color.rgb;\n\n    const value = `rgba(${r},${g},${b},${a})`;\n\n    this.setState(prevstate => ({\n      themeName: \"custom\",\n      options: {\n        ...prevstate.options,\n        [option]: value\n      }\n    }));\n  };\n\n  themeChange = event => {\n    const themeName = event.target.value;\n    this.setState({\n      themeName: themeName,\n      options: {\n        ...themes[themeName].options\n      }\n    });\n  };\n\n  codeChange = event => {\n    const value = event.target.value;\n\n    this.setState({\n      code: value\n    });\n  };\n\n  render() {\n    const { view, code, options, themeName } = this.state;\n    switch (this.state.view) {\n      case \"output\":\n        return (\n          <ParentDiv>\n            <h1>Custom Code Block</h1>\n            <ViewSwitcher\n              view={view}\n              changeView={this.changeView}\n              options={options}\n            />\n\n            <CodeBlock>{code}</CodeBlock>\n            <CssCodeDisplay options={options} />\n            <HtmlCodeDisplay code={code} />\n          </ParentDiv>\n        );\n      case \"input\":\n        return (\n          <React.Fragment>\n            <h1>Custom Code Block</h1>\n            <ViewSwitcher\n              view={view}\n              changeView={this.changeView}\n              options={options}\n            />\n            <BlockOptions\n              options={options}\n              optionChange={debounce(\n                (color, event, optionChange) =>\n                  this.optionChange(color, event, optionChange),\n                75\n              )}\n              code={code}\n              codeChange={this.codeChange}\n              themeChange={this.themeChange}\n              themeName={themeName}\n            />\n          </React.Fragment>\n        );\n      case \"key\":\n        return (\n          <React.Fragment>\n            <h1>Custom Code Block</h1>\n            <ViewSwitcher\n              view={view}\n              changeView={this.changeView}\n              options={options}\n            />\n            <Key />\n          </React.Fragment>\n        );\n      default:\n        return <h1>Custom Code Block</h1>;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}